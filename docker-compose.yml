version: '3'

networks:
    mynetwork:
        driver: bridge

services:
    mysql:
        container_name: mysql
        image: mysql:8.0
        environment:
            MYSQL_ROOT_PASSWORD: 123456
            MYSQL_DATABASE: tiktok
        volumes:
            - /home/schwarz/docker/mysql/data:/var/lib/mysql
        ports:
            - "3306:3306"
        networks:
            - mynetwork

    redis:
        container_name: redis
        image: redis:7.2.3
        volumes:
            - /home/schwarz/docker/redis/data:/data
        ports:
            - "6379:6379"
        networks:
            - mynetwork

    elasticsearch:
        container_name: es
        image: elasticsearch:7.12.0
        environment:
            - discovery.type=single-node
        volumes:
            - /home/schwarz/docker/es/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
            - /home/schwarz/docker/es/data:/usr/share/elasticsearch/data
            - /home/schwarz/docker/es/plugins:/usr/share/elasticsearch/plugins
        ports:
            - "9200:9200"
            - "9300:9300"
        networks:
            - mynetwork


    kibana:
        container_name: kibana
        image: kibana:7.12.0
        environment:
            ELASTICSEARCH_HOSTS: "http://elasticsearch:9200"
        volumes:
            - /home/schwarz/docker/kibana/config:/usr/share/kibana/config
        ports:
            - "5601:5601"
        depends_on:
            - elasticsearch
        networks:
            - mynetwork


    rabbitmq:
        image: rabbitmq:3.12.12-management
        container_name: rabbitmq
        environment:
            - RABBITMQ_DEFAULT_USER=root
            - RABBITMQ_DEFAULT_PASS=123456
        ports:
            - "5672:5672"  # AMQP
            - "15672:15672"  # RabbitMQ management UI
        volumes:
            - ./config/rabbitmq/data:/var/lib/rabbitmq
        networks:
            - mynetwork

    etcd:
        container_name: etcd
        image: quay.io/coreos/etcd:v3.5.0
        command: etcd -advertise-client-urls=http://127.0.0.1:2379 -listen-client-urls http://0.0.0.0:2379 --data-dir /etcd
        ports:
            - "2379:2379"
        networks:
            - mynetwork
    etcd-browser:
        container_name: etcd-browser
        image: rustyx/etcdv3-browser:latest
        ports:
            - "8804:8081"
        environment:
            - ETCD=etcd:2379
            - EDITABLE=1
        depends_on:
            - etcd
        networks:
            - mynetwork

    api:
        image: api_image
        networks:
            - mynetwork
        container_name: api
        restart: always
        ports:
            - "10001:10001"
        command: sh -c 'cd /app/output && ./api'

    user:
        image: user_image
        networks:
            - mynetwork
        container_name: user
        restart: always
        ports:
            - "8882:8882"
        command: sh -c './user'

    video:
        image: video_image
        networks:
            - mynetwork
        container_name: video
        restart: always
        ports:
            - "10003:10003"
        command: sh -c 'cd /app/output && ./video'

    interaction:
        image: interaction_image
        networks:
            - mynetwork
        container_name: interaction
        restart: always
        ports:
            - "10004:10004"
        command: sh -c 'cd /app/output && ./interaction'

    social:
        image: social_image
        networks:
            - mynetwork
        container_name: social
        restart: always
        ports:
            - "10005:10005"
        command: sh -c 'cd /app/output && ./social'

